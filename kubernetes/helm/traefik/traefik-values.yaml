#additionalArguments:
# Configure your CertificateResolver here...
# 
# HTTP Challenge
# ---
# Generic Example:
#   - --certificatesresolvers.generic.acme.email=your-email@example.com
#   - --certificatesresolvers.generic.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
#   - --certificatesresolvers.generic.acme.httpChallenge.entryPoint=web
#   - --certificatesresolvers.generic.acme.storage=/ssl-certs/acme-generic.json
#
# Prod / Staging Example:
#   - --certificatesresolvers.staging.acme.email=your-email@example.com
#   - --certificatesresolvers.staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
#   - --certificatesresolvers.staging.acme.httpChallenge.entryPoint=web
#   - --certificatesresolvers.staging.acme.storage=/ssl-certs/acme-staging.json
#   - --certificatesresolvers.production.acme.email=your-email@example.com
#   - --certificatesresolvers.production.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
#   - --certificatesresolvers.production.acme.httpChallenge.entryPoint=web
#   - --certificatesresolvers.production.acme.storage=/ssl-certs/acme-production.json
#
# DNS Challenge
# ---
# Cloudflare Example:
#  - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
#  - --certificatesresolvers.cloudflare.acme.email=your-email@example.com
#  - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1
#  - --certificatesresolvers.cloudflare.acme.storage=/ssl-certs/acme-cloudflare.json
#
# Generic (replace with your DNS provider):
#  - --certificatesresolvers.generic.acme.dnschallenge.provider=generic
#  - --certificatesresolvers.generic.acme.email=your-email@example.com
#  - --certificatesresolvers.generic.acme.storage=/ssl-certs/acme-generic.json

logs:
# Configure log settings here...
  general:
    level: ERROR

ports:
# Configure your entrypoints here...
  web:
    # (optional) Permanent Redirect to HTTPS
    redirectTo:
      port: websecure
  websecure:
    tls:
      enabled: true
      # (optional) Set a Default CertResolver
      # certResolver: cloudflare
  

env:
# Set your environment variables here...
# 
# DNS Challenge Credentials
# ---
# Cloudflare Example:
#   - name: CF_API_EMAIL
#     valueFrom:
#       secretKeyRef:
#         key: email
#         name: cloudflare-credentials
#   - name: CF_API_KEY
#     valueFrom:
#       secretKeyRef:
#         key: apiKey
#         name: cloudflare-credentials

#nfs volume
#volumes:
#  - name: nfs-traefik
#    mountPath: /etc/traefik/

securityContext:
  runAsUser: 1001
  fsGroup: 1001

persistence:
  enabled: true
  name: nfs-traefik
#  path: /etc/traefik/
  existingClaim: nfs-traefik

#deployment:
#  initContainers:
#    # The "volume-permissions" init container is required if you run into permission issues.
#    # Related issue: https://github.com/containous/traefik/issues/6972
#    - name: volume-permissions
#      image: busybox:1.36.1
#      command: ["sh", "-c", "chmod -Rv 600 /etc/traefik/*"]
#      volumeMounts:
#        - name: nfs-traefik
#          mountPath: /etc/traefik/

#default selfsigned certificates
#tlsStore:
#  default:
#    defaultCertificate:
#      secretName: selfsigned
#      certFile: /etc/traefik/self-signed-ssl/fullchain.pem
#      keyFile: /etc/traefik/self-signed-ssl/cert-key.pem

# Set Traefik as your default Ingress Controller, according to Kubernetes 1.19+ changes.
ingressClass:
  enabled: true
  isDefaultClass: true

#certificate resolver
#certResolvers:
#  staging:
#    acme:
#      email: ian.blockmans@gmail.com
#      storage: /etc/traefik/certs/acme.json
#      caServer: 'https://acme-staging-v02.api.letsencrypt.org/directory'
#      httpChallenge:
#        entryPoint: web
#
#  production:
#    acme:
#      email: ian.blockmans@gmail.com
#      storage: /etc/traefik/certs/acme.json
#      caServer: 'https://acme-v02.api.letsencrypt.org/directory'
#      httpChallenge:
#        entryPoint: web

# Disable default ingress for Dashboard
ingressRoute:
  dashboard:
    enabled: false

additionalArguments:
- "--api.insecure=true"
# Create the service, middleware and Ingress used to expose the dashboard (can also be created in another way).
# /!\ Yes, you need to replace "changeme" password with a better one. /!\

# Ingress Dashboard
extraObjects:
  - apiVersion: v1
    kind: Service
    metadata:
      name: traefik-api
    spec:
      type: ClusterIP
      selector:
        app.kubernetes.io/name: traefik
        app.kubernetes.io/instance: traefik-default
      ports:
      - port: 8080
        name: traefik
        targetPort: 9000
        protocol: TCP

  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: traefik-dashboard
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
    spec:
      rules:
      - host: traefik.ian.lan
        http:
          paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: traefik-api
                port:
                  name: traefik
